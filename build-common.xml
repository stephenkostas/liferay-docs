<?xml version="1.0"?> 

<!-- 

This ant script was created for converting the separate markdown chapter files of our documents into complete markdown, html, odt, and epub files. 

Remember to use the script in the root directory of the document to be converted, NOT THIS ONE.

For example, use the "ant markdown-to-all" command from the documentation/trunk/userGuide directory to convert the userGuide into complete English markdown, html, odt, and epub documents.

 -->

<project name="Markdown Document Conversion" default="echo-props" basedir=".">

    <property environment="env" />

    <property file="../build.${USERNAME}.properties" />
    <property file="../build.${user.name}.properties" />
    <property file="../build.${env.COMPUTERNAME}.properties" />
    <property file="../build.${env.HOST}.properties" />
    <property file="../build.${env.HOSTNAME}.properties" />
    <property file="../build.properties" />

    <!-- property "doc.dir" will be specified in the build.xml of the document root directory. -->
    <property name="lang" value="en"/>
    <property name="build.dir" value="./build"/>

    <property name="pandoc.app" location="/home/${user.name}/.cabal/bin/pandoc"/>

    <target name="display-pandoc-version">
        <exec executable="${pandoc.app}">
            <arg value="-v" />
        </exec>
    </target>

    <target name="echo-props">
        <echo message="pandoc.app -> ${pandoc.app}"/>
    </target>

    <target name="clean-all" description="deletes build directory">
        <echo message="... deleting build directory"/>
        <delete dir="${build.dir}"/>
    </target>

    <target name="clean-lang" description="deletes build/${lang} directory">
        <echo message="... deleting build directory"/>
        <delete dir="${build.dir}/${lang}"/>
    </target>

    <target name="prepare" description="creates build/${lang} directory">
        <echo message="... creating build/${lang} directory"/>
        <mkdir dir="${build.dir}/${lang}"/>
        <copy todir="${build.dir}/images">
            <fileset dir="./${lang}/images"/>
        </copy>
    </target>

    <target name="concat-markdown-files" depends="prepare" description="concatinates multiple markdown files into a single one">
        <echo message="... concatinating markdown files for ${doc.dir} (${lang})"/>
        <concat destfile="./${build.dir}/${lang}/${lang}-${doc.dir}.markdown">
            <fileset dir="./${lang}" casesensitive="yes">
                <include name="**/*.markdown"/>
            </fileset>
        </concat>
    </target>

    <target name="concat-markdown-files-win" depends="prepare" 
	    description="concatinates multiple markdown files into a single one">
	<echo message="... concatinating markdown files for ${doc.dir} (${lang}) on Windows"/>
        <exec executable="cmd">
            <arg value="/C" />
            <arg value="for"/>
            <arg value="%f"/>
            <arg value="in"/>
            <arg value="(.\\${lang}\\chapters\\*.markdown)"/>
            <arg value="do"/>
            <arg value="type"/>
            <arg value="&quot;%f&quot;"/>
            <arg value="&gt;&gt;"/>
	    <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
        </exec>
    </target>

    <target name="markdown-to-html" depends="add-markdown-metadata" description="converts markdown file to an html file">
        <echo message="... converting ${doc.dir} (${lang}) to html"/>
        <!-- pandoc -f markdown -t html -o test-guide.html  test-guide.markdown -->
        <exec executable="${pandoc.app}">
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="html"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.html"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
        </exec>      
    </target>

    <target name="markdown-to-html-win" depends="concat-markdown-files-win" description="converts markdown file to an html file on windows">
        <echo message="... converting ${doc.dir} (${lang}) to html"/>
        <!-- pandoc -f markdown -t html +RTS K64m -RTS -o 01-chapter-02.html  01-chapter-02.markdown -->
        <exec executable="cmd">
            <arg value="/C" />
            <arg value="pandoc"/>
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="html"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.html"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
        </exec>      
    </target>

    <target name="markdown-to-odt" depends="add-markdown-metadata" description="converts markdown file to an odt file">
        <echo message="... converting ${doc.dir} (${lang}) to odt"/>
        <!-- pandoc -f markdown -t odt -o test-guide.odt  test-guide.markdown -->
        <exec executable="${pandoc.app}">
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="odt"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.odt"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
        </exec>      
    </target>

    <target name="markdown-to-odt-win" depends="concat-markdown-files-win" description="converts markdown file to an ODT file on Windows">
        <echo message="... converting ${doc.dir} (${lang}) to odt on windows"/>
        <!-- pandoc -f markdown -t odt +RTS K64m -RTS -o 01-chapter-02.odt 01-chapter-02.markdown -->
        <exec executable="cmd">
            <arg value="/C" />
            <arg value="pandoc"/>
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="odt"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.odt"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
        </exec>      
    </target>

    <target name="markdown-to-epub" depends="add-markdown-metadata" description="converts markdown file to an epub file">
        <echo message="... converting ${doc.dir} (${lang}) to epub"/>
        <!-- pandoc -f markdown -t epub -o test-guide.epub  test-guide.markdown -->
        <exec executable="${pandoc.app}">
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="epub"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.epub"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
        </exec>      
    </target>

    <target name="markdown-to-epub-win" depends="concat-markdown-files-win" description="converts markdown file to an epub file on windows">
        <echo message="... converting ${doc.dir} (${lang}) to epub"/>
        <exec executable="cmd">
            <arg value="/C" />
            <arg value="pandoc"/>
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="epub"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.epub"/>
            <arg value="${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
        </exec>      
    </target>

    <target name="markdown-to-all" depends="markdown-to-html,markdown-to-odt,markdown-to-epub" description="converts markdown file to html, odt, and epub files" />

    <target name="markdown-to-all-win" depends="markdown-to-html-win,markdown-to-odt-win,markdown-to-epub-win" description="converts markdown file to html, odt, and epub files on windows" />
    
    <target name="copy-single-chapter" depends="prepare" description="copies chapter to be converted">
        <echo message="... copying ${chapter}"/>
        <copy file="./en/chapters/${chapter}.markdown" todir="./${build.dir}/${lang}"/>
        <move file="./${build.dir}/${lang}/${chapter}.markdown" tofile="./${build.dir}/${lang}/${lang}-${chapter}.markdown" />
    </target>
    
    <target name="chapter-to-html" depends="copy-single-chapter" description="converts single markdown chapter to an html file">
        <echo message="... converting ${chapter} (${lang}) to html"/>
        <!-- pandoc -f markdown -t html -o 01-introduction-to-liferay-ui.html 01-introduction-to-liferay-ui.markdown -->
        <exec executable="${pandoc.app}">
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="html"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.html"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.markdown"/>
        </exec>      
    </target>
    
    <target name="chapter-to-html-win" depends="copy-single-chapter" description="converts single markdown chapter to an html file on windows">
        <echo message="... converting ${chapter} (${lang}) to html"/>
        <!-- pandoc -f markdown -t html -o 01-introduction-to-liferay-ui.html 01-introduction-to-liferay-ui.markdown -->
        <exec executable="cmd">
            <arg value="/C" />
            <arg value="pandoc"/>
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="html"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.html"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.markdown"/>
        </exec>      
    </target>
    
    <target name="chapter-to-odt" depends="copy-single-chapter" description="converts single markdown chapter to an odt file">
        <echo message="... converting ${chapter} (${lang}) to odt"/>
        <!-- pandoc -f markdown -t odt -o 01-introduction-to-liferay-ui.odt 01-introduction-to-liferay-ui.markdown -->
        <exec executable="${pandoc.app}">
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="odt"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.odt"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.markdown"/>
        </exec>      
    </target>
    
    <target name="chapter-to-odt-win" depends="copy-single-chapter" description="converts single markdown chapter to an odt file on windows">
        <echo message="... converting ${chapter} (${lang}) to odt"/>
        <!-- pandoc -f markdown -t odt -o 01-introduction-to-liferay-ui.odt 01-introduction-to-liferay-ui.markdown -->
        <exec executable="cmd">
            <arg value="/C" />
            <arg value="pandoc"/>
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="odt"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.odt"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.markdown"/>
        </exec>      
    </target>
    
    <target name="chapter-to-epub" depends="copy-single-chapter" description="converts single markdown chapter to an epub file">
        <echo message="... converting ${chapter} (${lang}) to epub"/>
        <!-- pandoc -f markdown -t epub -o 01-introduction-to-liferay-ui.odt 01-introduction-to-liferay-ui.markdown -->
        <exec executable="${pandoc.app}">
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="epub"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.epub"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.markdown"/>
        </exec>      
    </target>
    
    <target name="chapter-to-epub-win" depends="copy-single-chapter" description="converts single markdown chapter to an epub file on windows">
        <echo message="... converting ${chapter} (${lang}) to epub"/>
        <!-- pandoc -f markdown -t epub -o 01-introduction-to-liferay-ui.odt 01-introduction-to-liferay-ui.markdown -->
        <exec executable="cmd">
            <arg value="/C" />
            <arg value="pandoc"/>
            <arg value="-f" />
            <arg value="markdown"/>
            <arg value="-t"/>
            <arg value="epub"/>
            <arg value="+RTS"/>
            <arg value="-K64m"/>
            <arg value="-RTS"/>
            <arg value="-smart"/>
            <arg value="-o"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.epub"/>
            <arg value="${build.dir}/${lang}/${lang}-${chapter}.markdown"/>
        </exec>      
    </target>
    
    <target name="chapter-to-all" depends="chapter-to-html,chapter-to-odt,chapter-to-epub" description="converts markdown chapter file to html, odt, and epub files" />

    <target name="chapter-to-all-win" depends="chapter-to-html-win,chapter-to-odt-win,chapter-to-epub-win" description="converts markdown chapter file to html, odt, and epub files on windows" />

    <target name="reset-images" description="resets the image numbers in a markdown chapter file">
        <echo message="... resetting image numbers in ${chapter} (${lang})"/>
        <java jar="../reset-images.jar" fork="true">
            <arg value="./${lang}/chapters/${chapter}.markdown"/>
            <!-- This is useful if you want to save the output to a new file without overwritting the original <arg value="${build.dir}/${chapter}.markdown"/> -->
        </java>
    </target>

<!-- Example: From liferay-docs/userGuide, enter the following command: ant number-images -Dchapter=12-administering-liferay-portal. Check liferay-docs/userGuide/build for your new file. The images should be numbered correctly. -->
    <target name="number-images" depends="reset-images" description="numbers the images in a markdown chapter file">
        <echo message="... numbering images in ${chapter} (${lang})"/>
        <java jar="../number-images.jar" fork="true">
            <arg value="${build.dir}/${chapter}.markdown"/>
            <!-- This is useful if you want to save the output to a new file without overwritting the original <arg value="${build.dir}/${chapter}.markdown"/> -->
        </java>
    </target>

    <target name="add-markdown-metadata" depends="concat-markdown-files" description="adds metadata at the top of a concatenated markdown file">
        <echo message="... adding metadata to ${doc.dir} (${lang})"/>
        <java jar="../add-markdown-metadata.jar" fork="true">
            <arg value="./${build.dir}/${lang}/${lang}-${doc.dir}.markdown"/>
            <arg value="${title}"/>
            <arg value="${author}"/>
            <arg value="${date}"/>
        </java>
    </target>

</project>
